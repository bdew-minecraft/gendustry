// This file is loaded early in preInit and should contain all the configuration
// Recipes shouldn't go here as items aren't registered yet

// Power config values, those are used for all machines. All the vaues are in MJ but apply to all power systems
// ------------------------------------------------------------------------------------------------------------
//
// MaxReceivedEnergy:
//     Max energy received into buffer in a single pulse
//     Should be high if direct connections form BC engines are expected as they output once in up to 100 ticks
//     500 is a good value for a combustion engines
//
// ActivationEnergy:
//     Machine will until that much energy is available before it does anything
//     Should be reasonably high to prevent small update spam
//
// MaxStoredEnergy:
//     Size of internal buffer, for some machines this affects speed, see below
//
// MjPerItem:
//     Cost of a single operation in MJ, for most machines this means processing 1 item
//
// PowerUseRate:
//     Sets the max speed of machines with variable speed
//
// Most machines use a variable speed system, while MjPerItem is constant, the actual energy used per tick is variable
// The upper bound is MaxStoredEnergy * PowerUseRate and the lower bound is ActivationEnergy
//
// For example, with the following config:
//
//     MaxStoredEnergy = 10000
//     MjPerItem = 10000
//     PowerUseRate = 0.005
//     ActivationEnergy = 5
//
// If a machine recieves 10 MJ/t it will stabilize at ~2000 energy stored and use 10 MJ/t to run, completing a cycle in 1000 ticks
// If the same machine recieves 50 MJ/t it will stabilize at ~10000 energy stored and use 50 MJ/t to run, completing a cycle in 200 ticks
// While if it would recieve 2 MJ/t it will only run once in 2.5 ticks on average, will consume 5 MJ/t every time it activates and will take 5000 ticks to finish, no energy will be stored

cfg Machines {
    cfg MutagenProducer {
        Enabled = Yes
        MaxReceivedEnergy = 500
        PowerUseRate = 0.0005
        MjPerItem = 100000
        MaxStoredEnergy = 500000
        ActivationEnergy = 25

        TankSize = 10000 // Output tank size in milibuckets
    }

    cfg Mutatron {
        Enabled = Yes
        MaxReceivedEnergy = 500
        PowerUseRate = 0.001
        MjPerItem = 20000
        MaxStoredEnergy = 100000
        ActivationEnergy = 10

        TankSize = 10000             // Output tank size in milibuckets
        MutagenPerItem = 1000        // Mutagen use per run, in milibuckets
        LabwareConsumeChance = 100   // Chance that the Genetic Labware will be consumed, 0-100
        DegradeChanceNatural = 0     // Chance of natural princesses to become artificial when mutating, 0-100
        DeathChanceArtificial = 10   // Chance of artificial princesses to be killed when mutating, 0-100

        SecretMutationChance = 10    // Chance that secret mutation will be selected over a normal one, 0-100
                                     // Has no effect if only secret mutations are present
    }

    cfg MutatronAdv {
        Enabled = Yes
        MaxReceivedEnergy = 500
        PowerUseRate = 0.00125
        MjPerItem = 20000
        MaxStoredEnergy = 160000
        ActivationEnergy = 20

        TankSize = 10000             // Output tank size in milibuckets
        MutagenPerItem = 1000        // Mutagen use per run, in milibuckets
        LabwareConsumeChance = 100   // Chance that the Genetic Labware will be consumed, 0-100

        // Uses DeathChanceArtificial and DegradeChanceNatural settings from the normal mutatron section
    }

    cfg Sampler {
        Enabled = Yes
        MaxReceivedEnergy = 500
        PowerUseRate = 0.001
        MjPerItem = 20000
        MaxStoredEnergy = 100000
        ActivationEnergy = 10

        LabwareConsumeChance = 100 // Chance that the Genetic Labware will be consumed, 0-100
        ConvertEBSerums = Y
    }

    cfg Imprinter {
        Enabled = Yes
        MaxReceivedEnergy = 500
        PowerUseRate = 0.0005
        MjPerItem = 80000
        MaxStoredEnergy = 400000
        ActivationEnergy = 20

        LabwareConsumeChance = 100 // Chance that the Genetic Labware will be consumed, 0-100
        DeathChanceNatural = 0     // Chance of natural princesses or queen to be killed when imprinting, 0-100
        DeathChanceArtificial = 10 // Chance of artificial princesses or queen to be killed when imprinting, 0-100
    }
    
    cfg IndustrialApiary {
        Enabled = Yes
        MaxReceivedEnergy = 100
        MaxStoredEnergy = 10000
        ActivationEnergy = 0

        BaseMjPerTick = 2 // Base run cost in MJ/t, before any modifiers
    }
}

cfg Items {
    cfg IndustrialGrafter {
        Enabled = Yes
        Charges = 200 // Number of blocks that a fully charged grafter can break
        MjPerCharge = 500 // Cost of a single broken block in MJ
        AOE = 2 // Radius from the central block, 1 = 3x3x3, 2 = 5x5x5 and so on
    }
}

// === INDUSTRIAL APIARY UPGRADES ===

cfg Upgrades {

  // section names are used in localization and texture names
  // id is used in saves, changing it will brake any upgrades that already exist
  // max is the maximum number installed in a single apiary
  // valid modifiers:
  // * Boolean: sealed, selfLighted, sunlightSimulated, hellish, automated, collectingPollen
  // * Numeric: lifespan, territory, mutation, production, flowering, geneticDecay, energy, temperature, humidity

  cfg prod {
    id = 0
    max = 8
    production *= 1.2
    energy *= 1.2
  }

  cfg life {
    id = 1
    max = 4
    energy *= 1.05
    lifespan /= 1.5
  }

  cfg flowering {
    id = 2
    max = 8
    energy *= 1.1
    flowering *= 1.2
  }

  cfg territory {
    id = 3
    max = 4 
    energy *= 1.05
    territory *= 1.5
  }

  cfg humidifier {
    id = 4
    max = 8 
    energy *= 1.05
    humidity += 0.25
  }

  cfg dryer {
    id = 5
    max = 8 
    energy *= 1.05
    humidity -= 0.25
  }

  cfg heater {
    id = 6
    max = 8 
    energy *= 1.05
    temperature += 0.25
  }

  cfg cooler {
    id = 7
    max = 8 
    energy *= 1.05
    temperature -= 0.25
  }

  cfg sealing {
    id = 10
    max = 1 
    energy *= 1.05
    sealed = Y
  }

  cfg light {
    id = 11
    max = 1 
    energy *= 1.05
    selfLighted = Y
  }

  cfg sky {
    id = 12
    max = 1 
    energy *= 1.05
    sunlightSimulated = Y
  }

  cfg hell {
    id = 13
    max = 1 
    energy *= 1.5
    hellish = Y
  }

  cfg auto {
    id = 14
    max = 1 
    energy *= 1.1
    automated = Y
  }

  cfg sieve {
    id = 15
    max = 1 
    energy *= 1.25
    collectingPollen = Y
  }
}

cfg Power {
  RF_MJ_Ratio = 10   // 10 RF = 1 MJ
  EU_MJ_Ratio = 2.5  // 5 EU = 2 MJ

  cfg EU {
    Enabled = Y

    // Maximum packet size before stuff explodes
    MaxSafeInput = 512
  }

  cfg BC {
    Enabled = Y

    // Defines the raio between Max and Min recieved power
    // Should be reasonably high to prevent small update spam
    MinReceivedEnergyDivisor = 10

    // Power loss from internal buffer, will loose on average PowerLoss/PowerLossInterval MJ/tick
    // Cannot be set below 0.01, this is enforced by BC API
    // Applies to the intermediate MJ buffer only
    PowerLoss = 1
    PowerLossInterval = 100
  }

  cfg RF {
    Enabled = Y
  }
}